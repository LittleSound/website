<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Clusterpedia.io – Clusterpedia</title><link>/zh-cn/</link><description>Recent content in Clusterpedia on Clusterpedia.io</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 15 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="/zh-cn/index.xml" rel="self" type="application/rss+xml"/><item><title>Blog: 升级到 Clusterpedia 0.1.0</title><link>/zh-cn/blog/2022/02/15/%E5%8D%87%E7%BA%A7%E5%88%B0-clusterpedia-0.1.0/</link><pubDate>Tue, 15 Feb 2022 00:00:00 +0000</pubDate><guid>/zh-cn/blog/2022/02/15/%E5%8D%87%E7%BA%A7%E5%88%B0-clusterpedia-0.1.0/</guid><description>
&lt;p>随着 Clusterpedia 0.1.0 版本的发布，我们可以将早期的 0.0.9-alpha 或者 0.0.8 更新到 0.1.0 了。&lt;/p>
&lt;h2 id="旧版本资源清理">旧版本资源清理&lt;/h2>
&lt;p>由于资源检索的路径发生了修改(&lt;a href="https://github.com/clusterpedia-io/clusterpedia/pull/73">#73&lt;/a>)，所以需要使用 0.0.9-alpha 的 &lt;a href="https://github.com/clusterpedia-io/clusterpedia/blob/v0.0.9-alpha/hack/clean-clusterconfigs.sh">clean-clusterconfigs.sh&lt;/a> 来清理 &lt;em>.kube/config&lt;/em> 中的 Clusterpedia 集群访问配置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">curl -sfL https://raw.githubusercontent.com/clusterpedia-io/clusterpedia/v0.0.9-alpha/hack/clean-clusterconfigs.sh &lt;span style="color:#000;font-weight:bold">|&lt;/span> sh -
&lt;/code>&lt;/pre>&lt;/div>&lt;p>备份并删除 &lt;code>PediaCluster&lt;/code> 资源&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl get pediacluster -o yaml &amp;gt; clusters.yaml.bak
kubectl delete pediacluster --all
&lt;/code>&lt;/pre>&lt;/div>&lt;p>所有的 &lt;code>PediaCluster&lt;/code> 资源都删除后，删除 &lt;code>PediaCluster CRD&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl delete crd pediaclusters.clusters.clusterpedia.io
&lt;/code>&lt;/pre>&lt;/div>&lt;p>删除用于注册聚合式 API 的 &lt;code>APIServices&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl delete apiservices v1alpha1.pedia.clusterpedia.io
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="更新-clusterpedia">更新 Clusterpedia&lt;/h2>
&lt;p>新建 &lt;code>PediaCluster CRD&lt;/code>, 并且更新 &lt;code>Clusterpedia APIServer&lt;/code> 和 &lt;code>Clustersynchro Manager&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#000">DEPLOY_YAML_PATH&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>https://raw.githubusercontent.com/clusterpedia-io/clusterpedia/v0.1.0/deploy
&lt;span style="color:#000">CRD_YAML_PATH&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">$DEPLOY_YAML_PATH&lt;/span>/crds
kubectl apply -f &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> &lt;span style="color:#000">$CRD_YAML_PATH&lt;/span>/cluster.clusterpedia.io_pediaclusters.yaml,&lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> &lt;span style="color:#000">$DEPLOY_YAML_PATH&lt;/span>/clusterpedia_clustersynchro_manager_deployment.yaml,&lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> &lt;span style="color:#000">$DEPLOY_YAML_PATH&lt;/span>/clusterpedia_apiserver_deployment.yaml,&lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> &lt;span style="color:#000">$DEPLOY_YAML_PATH&lt;/span>/clusterpedia_apiserver_apiservice.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以将 YAML 下载到本地，或者拉取项目到本地，进入 ./deploy 目录下执行 kubectl apply。&lt;/p>
&lt;h2 id="重新接入集群">重新接入集群&lt;/h2>
&lt;p>由于 &lt;code>PediaCluster&lt;/code> 的 APIVersion 和结构都进行了一些不兼容的优化，所以需要重新根据备份的 &lt;em>clusters.yaml.bak&lt;/em> 来重新创建 &lt;code>PediaCluster&lt;/code>。&lt;/p>
&lt;p>当前 &lt;code>PediaCluster&lt;/code> 的示例为：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">cluster.clusterpedia.io/v1alpha2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">PediaCluster&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">cluster-example&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiserver&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;https://10.30.43.43:6443&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">caData&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">tokenData&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">certData&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">keyData&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">syncResources&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">group&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">apps&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">resources&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">deployments&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">group&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">resources&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">pods&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>相比 0.0.9-alpha 主要有三个修改：&lt;/p>
&lt;ul>
&lt;li>&lt;code>apiVersion&lt;/code> 由 &lt;em>clusters.clusterpedia.io/v1alpha1&lt;/em> -&amp;gt; &lt;em>cluster.clusterpedia.io/v1alpha2&lt;/em>&lt;/li>
&lt;li>&lt;code>spec.apiserverURL&lt;/code> -&amp;gt; &lt;code>spec.apiserver&lt;/code>&lt;/li>
&lt;li>&lt;code>spec.resources&lt;/code> -&amp;gt; &lt;code>spec.syncResources&lt;/code>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>具体的修改可以查看: &lt;a href="https://github.com/clusterpedia-io/clusterpedia/pull/70">#70&lt;/a>
&lt;a href="https://github.com/clusterpedia-io/clusterpedia/pull/67">#67&lt;/a>
&lt;a href="https://github.com/clusterpedia-io/clusterpedia/pull/76">#76&lt;/a>
&lt;a href="https://github.com/clusterpedia-io/clusterpedia/pull/77">#77&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>根据 &lt;em>clusters.yaml.bak&lt;/em> 内旧的 PediaCluster 来创建新的 &lt;code>PediaCluster&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">cluster.clusterpedia.io/v1alpha2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">PediaCluster&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">cluster-1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>{}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">cluster.clusterpedia.io/v1alpha2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">PediaCluster&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">cluster-2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>{}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查看集群接入状态&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl get pediacluster
&lt;/code>&lt;/pre>&lt;/div>&lt;p>为多集群检索生成快捷访问配置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">curl -sfL https://raw.githubusercontent.com/clusterpedia-io/clusterpedia/v0.1.0/hack/gen-clusterconfigs.sh &lt;span style="color:#000;font-weight:bold">|&lt;/span> sh -
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Blog: Clusterpedia 加持 kubectl，检索多集群资源</title><link>/zh-cn/blog/2021/12/03/clusterpedia-%E5%8A%A0%E6%8C%81-kubectl%E6%A3%80%E7%B4%A2%E5%A4%9A%E9%9B%86%E7%BE%A4%E8%B5%84%E6%BA%90/</link><pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate><guid>/zh-cn/blog/2021/12/03/clusterpedia-%E5%8A%A0%E6%8C%81-kubectl%E6%A3%80%E7%B4%A2%E5%A4%9A%E9%9B%86%E7%BE%A4%E8%B5%84%E6%BA%90/</guid><description>
&lt;p>在多集群时代，我们可以通过 cluster-api 来批量创建管理集群，使用 Karmada/Clusternet 来分发部署应用。&lt;/p>
&lt;p>不过我们貌似还是缺少了什么功能，我们要如何去统一的查看多个集群中的资源呢？&lt;/p>
&lt;p>对于单个集群的资源，我们可以使用 kubectl 来查看搜索资源，但是在想要检索多集群的资源时，貌似没有什么趁手的产品可以使用。&lt;/p>
&lt;p>不过从今天开始，这个问题不会再困扰你，因为&lt;strong>在 Clusterpedia 的加持下，你手上的 kubectl 已经可以用来检索多集群资源啦。&lt;/strong>&lt;/p>
&lt;p>例如，使用 kubectl 来获取多个集群下 kube-system 命名空间内的 deployments。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ kubectl get deployments -n kube-system
CLUSTER NAME READY UP-TO-DATE AVAILABLE AGE
cluster-1 calico-kube-controllers 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 63d
cluster-1 coredns 2/2 &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> 63d
cluster-2 calico-kube-controllers 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 109d
cluster-2 coredns-coredns 2/2 &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> 109d
cluster-2 dce-chart-manager 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 109d
cluster-2 dce-clair 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 109d
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="clusterpedia-介绍">Clusterpedia 介绍&lt;/h2>
&lt;p>Clusterpedia，名字借鉴自 Wikipedia，同样也展现了 Clusterpedia 的核心理念 —— 多集群的百科全书。&lt;/p>
&lt;p>通过聚合多集群资源，在兼容 Kubernetes OpenAPI 的基础上额外提供了更加强大的检索功能，让用户更快更方便的在多集群中获取到想要的任何资源。&lt;/p>
&lt;p>当然 Clusterpedia 的能力并不仅仅只是检索查看，未来还会支持对资源的简单控制，就像 wiki 同样支持编辑词条一样。&lt;/p>
&lt;h3 id="架构设计">架构设计&lt;/h3>
&lt;div align="center">&lt;img src="https://github.com/clusterpedia-io/clusterpedia/blob/main/docs/images/arch.png?raw=true" style="width:900px;" />&lt;/div>
Clusterpedia 在架构上分为四个部分：
&lt;ul>
&lt;li>&lt;code>Clusterpedia APIServer&lt;/code>：以 Aggregated API 的方式注册到 Kube APIServer，通过统一的入口来提供服务。&lt;/li>
&lt;li>&lt;code>ClusterSynchro Manager&lt;/code>：管理用于同步集群资源的 Cluster Synchro。&lt;/li>
&lt;li>&lt;code>Storage Layer (存储层)&lt;/code>：用来连接操作具体的存储组件，然后通过存储层接口注册到 Clusterpedia APIServer 和 ClusterSynchro Manager 中。&lt;/li>
&lt;li>&lt;code>存储组件&lt;/code>：具体的存储设施，例如 mysql， postgres，redis 或者其他图数据库。
另外，Clusterpedia 会使用 &lt;strong>PediaCluster&lt;/strong> 这个自定义资源来实现集群认证和资源收集配置&lt;/li>
&lt;/ul>
&lt;p>Clusterpedia 还提供了可以接入 mysql 和 postgres 的默认存储层。&lt;/p>
&lt;p>Clusterpedia 并不关心用户所使用的具体存储设置是什么，用户可以根据自己的需求来选择或者实现存储层，然后将存储层以插件的形式注册到 Clusterpedia 中来使用。&lt;/p>
&lt;h3 id="特性和功能">特性和功能&lt;/h3>
&lt;ul>
&lt;li>支持复杂的检索条件，过滤条件，排序，分页等等&lt;/li>
&lt;li>支持查询资源时请求附带关系资源&lt;/li>
&lt;li>统一主集群和多集群资源检索入口&lt;/li>
&lt;li>兼容 kubernetes OpenAPI, 可以直接使用 kubectl 进行多集群检索, 而无需第三方插件或者工具&lt;/li>
&lt;li>兼容收集不同版本的集群资源，不受主集群版本约束，&lt;/li>
&lt;li>资源收集高性能，低内存&lt;/li>
&lt;li>根据集群当前的健康状态，自动启停资源收集&lt;/li>
&lt;li>插件化存储层，用户可以根据自己需求使用其他存储组件来自定义存储层&lt;/li>
&lt;li>高可用&lt;/li>
&lt;/ul>
&lt;h2 id="部署">部署&lt;/h2>
&lt;p>关于部署的详细流程，可以查看 &lt;a href="/zh-cn/docs/installation">安装 Clusterpedia&lt;/a>，这里着重介绍了如何使用 clusterpedia。&lt;/p>
&lt;h2 id="集群资源收集">集群资源收集&lt;/h2>
&lt;p>clusterpedia 部署完成后，我们可以通过 kubectl 来操作 &lt;strong>PediaCluster&lt;/strong> 资源。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ kubectl get pediaclusters
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 examples 目录下，可以看到 PediaCluster 的示例&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">clusters.clusterpedia.io/v1alpha1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">PediaCluster&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">cluster-example&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiserverURL&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;https://172.30.43.41:6443&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">caData&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">tokenData&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">certData&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">keyData&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">resources&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">group&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">apps&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">resources&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">deployments&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">group&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">resources&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">pods&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>PediaCluster&lt;/strong> 在配置上可以分成两部分&lt;/p>
&lt;ul>
&lt;li>集群认证&lt;/li>
&lt;li>指定资源收集 &lt;em>.spec.resources&lt;/em>&lt;/li>
&lt;/ul>
&lt;h3 id="集群认证">集群认证&lt;/h3>
&lt;p>caData , tokenData , certData , keyData 字段用于集群的验证。&lt;/p>
&lt;p>当前暂时不支持从 ConfigMap 或者 Secret 中获取验证相关的信息，不过已经在 Roadmap 中了。&lt;/p>
&lt;p>&lt;strong>在设置验证字段时，注意要使用 base64 后的字符串&lt;/strong>&lt;/p>
&lt;p>在 examples 目录下提供了生成用于访问子集群的 rbac yaml &lt;em>clusterpedia_synchro_rbac.yaml&lt;/em>，来方便的获取子集群的权限 token。&lt;/p>
&lt;p>在子集群中部署该 yaml，然后获取对应的 token 和 ca 证书。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ &lt;span style="color:#8f5902;font-style:italic"># 当前 kubectl 连接到子集群中&lt;/span>
$ kubectl apply -f examples/clusterpedia_synchro_rbac.yaml
clusterrole.rbac.authorization.k8s.io/clusterpedia-synchro created
serviceaccount/clusterpedia-synchro created
clusterrolebinding.rbac.authorization.k8s.io/clusterpedia-synchro created
$ &lt;span style="color:#000">SYNCHRO_TOKEN&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get secret &lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get serviceaccount clusterpedia-synchro -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.secrets[0].name}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span> -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.data.token}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
$ &lt;span style="color:#000">SYNCHRO_CA&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get secret &lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl get serviceaccount clusterpedia-synchro -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.secrets[0].name}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span> -o &lt;span style="color:#000">jsonpath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{.data.ca\.crt}&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>复制 ./examples/pediacluster.yaml, 并修改 .spec.apiserverURL 和 .metadata.name 字段，并且将 $SYNCHRO_TOKEN 和 $SYNCHRO_CA 填写到 tokenData 和 caData 中。&lt;/p>
&lt;p>使用 kubectl apply 创建。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ kubectl apply -f cluster-1.yaml
pediacluster.clusters.clusterpedia.io/cluster-1 created
&lt;/code>&lt;/pre>&lt;/div>&lt;p>为了方便后续使用，建议再创建一个 cluster-2&lt;/p>
&lt;h3 id="集群收集">集群收集&lt;/h3>
&lt;p>可以通过设置 &lt;em>spec.resources&lt;/em> 字段的 group 和 group 下的 resources 来进行指定收集的资源。&lt;/p>
&lt;p>在 status 中我们也可以看到资源的收集状态。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">status&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">conditions&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">lastTransitionTime&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2021-12-02T04:00:45Z&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">message&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">reason&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Healthy&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">status&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;True&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Ready&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">resources&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">group&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">resources&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Pod&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">namespaced&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">resource&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">pods&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">syncConditions&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">lastTransitionTime&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2021-12-02T04:00:45Z&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">status&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Syncing&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">storageVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">v1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">version&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">v1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">group&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">apps&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">resources&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Deployment&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">namespaced&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">resource&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">deployments&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">syncConditions&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">lastTransitionTime&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2021-12-02T04:00:45Z&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">status&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Syncing&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">storageVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">v1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">version&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">v1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">version&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">v1.22.2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="资源检索">资源检索&lt;/h2>
&lt;p>配置好我们需要收集的资源后，我们就可以进行重头戏了 —— 集群检索&lt;/p>
&lt;p>clusterpedia 支持两种资源检索:&lt;/p>
&lt;ul>
&lt;li>兼容 Kubernetes OpenAPI 的资源检索&lt;/li>
&lt;li>集合资源 (Collection Resource) 的检索&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ kubectl api-resources &lt;span style="color:#000;font-weight:bold">|&lt;/span> grep pedia.clusterpedia.io
collectionresources pedia.clusterpedia.io/v1alpha1 &lt;span style="color:#204a87">false&lt;/span> CollectionResource
resources pedia.clusterpedia.io/v1alpha1 &lt;span style="color:#204a87">false&lt;/span> Resources
&lt;/code>&lt;/pre>&lt;/div>&lt;p>为了方便我们更好的使用 kubectl 来进行检索，我们可以先通过 make gen-clusterconfig 来为子集群创建用于检索的 &amp;lsquo;快捷方式&amp;rsquo;。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ make gen-clusterconfigs
./hack/gen-clusterconfigs.sh
Current Context: kubernetes-admin@kubernetes
Current Cluster: kubernetes
Server: https://10.9.11.11:6443
TLS Server Name:
Insecure Skip TLS Verify:
Certificate Authority:
Certificate Authority Data: ***
Cluster &lt;span style="color:#4e9a06">&amp;#34;clusterpedia&amp;#34;&lt;/span> set.
Cluster &lt;span style="color:#4e9a06">&amp;#34;cluster-1&amp;#34;&lt;/span> set.
&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用 kubectl config get-clusters 可以查看当前支持的集群。&lt;/p>
&lt;p>其中 clusterpedia 是一个特殊的 cluster，用于多集群检索，以 kubectl &amp;ndash;cluster clusterpedia 的方式来检索多个集群的资源。&lt;/p>
&lt;h3 id="多集群资源检索">多集群资源检索&lt;/h3>
&lt;p>我们先看一下我们都收集了哪些资源，只有被收集的资源才可以进行检索。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ kubectl --cluster clusterpedia api-resources
NAME SHORTNAMES APIVERSION NAMESPACED KIND
pods po v1 &lt;span style="color:#204a87">true&lt;/span> Pod
deployments deploy apps/v1 &lt;span style="color:#204a87">true&lt;/span> Deployment
&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看到当前收集并支持 pods 和 deployments.apps 两种资源&lt;/p>
&lt;p>&lt;strong>查看所有集群的 kube-system 命名空间下的 deployments&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ kubectl --cluster clusterpedia get deployments -n kube-system
CLUSTER NAME READY UP-TO-DATE AVAILABLE AGE
cluster-1 calico-kube-controllers 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 63d
cluster-1 coredns 2/2 &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> 63d
cluster-2 calico-kube-controllers 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 109d
cluster-2 coredns-coredns 2/2 &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> 109d
cluster-2 dce-chart-manager 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 109d
cluster-2 dce-clair 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 109d
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>查看所有集群的 kube-system, default 命名空间下的 deployments&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ kubectl --cluster clusterpedia get deployments -A -l &lt;span style="color:#4e9a06">&amp;#34;search.clusterpedia.io/namespaces in (kube-system, default)&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>查看 cluster-1, cluster-2 两个集群下的 kube-system, default 命名空间下中的 deployments&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ kubectl --cluster clusterpedia get deployments -A -l &lt;span style="color:#4e9a06">&amp;#34;search.clusterpedia.io/clusters in (cluster-1, cluster-2),\
&lt;/span>&lt;span style="color:#4e9a06"> search.clusterpedia.io/namespaces in (kube-system,default)&amp;#34;&lt;/span>
NAMESPACE CLUSTER NAME READY UP-TO-DATE AVAILABLE AGE
kube-system cluster-1 calico-kube-controllers 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 63d
kube-system cluster-1 coredns 2/2 &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> 63d
default cluster-1 dao-2048-2048 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 20d
default cluster-1 hello-world-server 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 26d
default cluster-1 my-nginx 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 39d
default cluster-1 phpldapadmin 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 40d
kube-system cluster-2 calico-kube-controllers 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 109d
kube-system cluster-2 coredns-coredns 2/2 &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> 109d
kube-system cluster-2 dce-chart-manager 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 109d
kube-system cluster-2 dce-clair 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 109d
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>显示数据有删减，略多&lt;/em>&lt;/p>
&lt;p>&lt;strong>查看 cluster-1, cluster-2 两个集群下的 kube-system, default 命名空间下中的 deployments，并根据资源的名字排序&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ kubectl --cluster clusterpedia get deployments -A -l &lt;span style="color:#4e9a06">&amp;#34;search.clusterpedia.io/clusters in (cluster-1, cluster-2),\
&lt;/span>&lt;span style="color:#4e9a06"> search.clusterpedia.io/namespaces in (kube-system,default),\
&lt;/span>&lt;span style="color:#4e9a06"> search.clusterpedia.io/orderby=name&amp;#34;&lt;/span>
kube-system cluster-1 calico-kube-controllers 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 63d
kube-system cluster-2 calico-kube-controllers 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 109d
kube-system cluster-1 coredns 2/2 &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> 63d
kube-system cluster-2 coredns-coredns 2/2 &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> 109d
default cluster-1 dao-2048-2048 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 20d
kube-system cluster-2 dce-chart-manager 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 109d
kube-system cluster-2 dce-clair 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 109d
kube-system cluster-2 dce-registry 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 109d
kube-system cluster-2 dce-uds-storage-server 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 109d
default cluster-1 dd-airflow-scheduler 0/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 53d
default cluster-1 dd-airflow-web 0/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 53d
kube-system cluster-2 metrics-server 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 109d
default cluster-1 my-nginx 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 39d
default cluster-1 nginx-dev 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 14d
default cluster-1 openldap 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 40d
default cluster-1 phpldapadmin 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 40d
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>显示数据有删减，略多&lt;/em>&lt;/p>
&lt;h3 id="指定集群检索">指定集群检索&lt;/h3>
&lt;p>&lt;strong>我们如果想要检索指定集群的资源的话，我们可以使用 &amp;ndash;cluster 来指定具体的集群名称&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ kubectl --cluster cluster-1 get deployments -A
NAMESPACE CLUSTER NAME READY UP-TO-DATE AVAILABLE AGE
kubeapps-oidc cluster-1 apach2-apache 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 35d
kube-system cluster-1 calico-kube-controllers 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 63d
cert-manager cluster-1 cert-manager 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 42d
cert-manager cluster-1 cert-manager-cainjector 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 42d
cert-manager cluster-1 cert-manager-webhook 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 42d
kube-system cluster-1 coredns 2/2 &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> 63d
default cluster-1 dao-2048-2048 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 20d
kubernetes-dashboard cluster-1 dashboard-metrics-scraper 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 54d
default cluster-1 dd-airflow-scheduler 0/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 53d
default cluster-1 dd-airflow-web 0/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 53d
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>显示数据有删减，略多&lt;/em>&lt;/p>
&lt;p>除了 &lt;a href="http://search.clusterpedia.io/clusters">http://search.clusterpedia.io/clusters&lt;/a> 外其余的复杂查询的支持和多集群检索相同。&lt;/p>
&lt;p>如果我们要获取一个资源的详情，那么也是需要指定集群才可以。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ kubectl --cluster cluster-1 -n kube-system get deployments coredns
CLUSTER NAME READY UP-TO-DATE AVAILABLE AGE
cluster-1 apach2-apache 1/1 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 35d
&lt;/code>&lt;/pre>&lt;/div>&lt;p>复杂检索clusterpedia 支持以下复杂检索：&lt;/p>
&lt;ul>
&lt;li>指定一个或者多个&lt;strong>集群名称&lt;/strong>&lt;/li>
&lt;li>指定一个或者多个&lt;strong>命名空间&lt;/strong>&lt;/li>
&lt;li>指定一个或者多个&lt;strong>资源名称&lt;/strong>&lt;/li>
&lt;li>指定多个字段的&lt;strong>排序&lt;/strong>&lt;/li>
&lt;li>&lt;strong>分页&lt;/strong>功能，可以指定 size 和 offset&lt;/li>
&lt;li>&lt;strong>labels 过滤&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>对于字段的排序，实际的效果是根据存储层来决定的，默认存储层支持根据 cluster , name , namespace , created_at , resource_version 进行正序或者倒序的排序。&lt;/p>
&lt;h3 id="检索条件的传递方式">检索条件的传递方式&lt;/h3>
&lt;p>上面实例中，演示了使用 kubectl 来进行检索，而这些复杂的检索条件通过 label 来传递的。实际上 clusterpedia 还支持直接通过 url query 的传递这些检索条件。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>功能&lt;/th>
&lt;th>label key&lt;/th>
&lt;th>url query&lt;/th>
&lt;th>example&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Specified resource name&lt;/td>
&lt;td>search.clusterpedia.io/names&lt;/td>
&lt;td>names&lt;/td>
&lt;td>&lt;code>?names=pod-1,pod-2&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Specified namespace&lt;/td>
&lt;td>search.clusterpedia.io/namespaces&lt;/td>
&lt;td>namespaces&lt;/td>
&lt;td>&lt;code>?namespaces=kube-system,default&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Specified cluster name&lt;/td>
&lt;td>search.clusterpedia.io/clusters&lt;/td>
&lt;td>clusters&lt;/td>
&lt;td>&lt;code>?clusters=cluster-1,cluster-2&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Sort by specified fileds&lt;/td>
&lt;td>search.clusterpedia.io/orderby&lt;/td>
&lt;td>orderby&lt;/td>
&lt;td>&lt;code>?orderby=name desc,namespace&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Specified size&lt;/td>
&lt;td>search.clusterpedia.io/size&lt;/td>
&lt;td>size&lt;/td>
&lt;td>&lt;code>?size=100&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Specified offset&lt;/td>
&lt;td>search.clsuterpedia.io/offset&lt;/td>
&lt;td>offset&lt;/td>
&lt;td>&lt;code>?offset=10&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>search label key 的操作符支持 ==, =, !=, in, not in 对于 size 这个条件，实际上 kubectl 可以通过 &amp;ndash;chunk-size 来指定，而不需要通过 label key。&lt;/p>
&lt;h3 id="聚合资源collection-resource">聚合资源(Collection Resource)&lt;/h3>
&lt;p>在 clusterpedia 还有对资源更加高级的聚合，使用 &lt;strong>Collection Resource&lt;/strong> 可以一次性获取到一组不同类型的资源。&lt;/p>
&lt;p>可以先查看一下当前 clusterpedia 支持哪些 &lt;strong>Collection Resource&lt;/strong>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ kubectl get collectionresources
NAME RESOURCES
workloads deployments.apps,daemonsets.apps,statefulsets.apps
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过获取 workloads 便可获取到一组 deployment, daemonset, statefulset 聚合在一起的资源 而且 Collection Resource 同样支持所有的复杂查询。&lt;/p>
&lt;p>&lt;code>kubectl get collectionresources workloads&lt;/code> 会默认获取所有集群下所有命名空间的相应资源。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ kubectl get collectionresources workloads
CLUSTER GROUP VERSION KIND NAMESPACE NAME AGE
cluster-1 apps v1 DaemonSet kube-system vsphere-cloud-controller-manager 63d
cluster-2 apps v1 Deployment kube-system calico-kube-controllers 109d
cluster-2 apps v1 Deployment kube-system coredns-coredns 109d
cluster-2 apps v1 Deployment dce-acm-agent dce-acm-agent 84d
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>在 cluster-1 中增加收集 Daemonset, 输出有删减，太多&lt;/em>&lt;/p>
&lt;p>由于 kubectl 的限制所以无法在 kubectl 来使用复杂查询，只能通过 url query 的方式来查询。&lt;/p>
&lt;h3 id="自定义-collection-resource">自定义 Collection Resource&lt;/h3>
&lt;p>&lt;strong>Collection Resource&lt;/strong> 支持哪些资源是由存储层来提供，而默认存储层未来会支持自定义组合 &lt;strong>Collection Resource&lt;/strong>。&lt;/p>
&lt;h2 id="新特性议题">新特性议题&lt;/h2>
&lt;h3 id="对资源进行更复杂的操作">对资源进行更复杂的操作&lt;/h3>
&lt;p>clusterpedia 不仅仅只是用来做资源检索，和 wiki 一样，它也应该具有对资源简单的控制能力，例如 watch, create, delete, update 等操作。&lt;/p>
&lt;p>对于写操作，实际会采用双写 + 响应 warning 的方式来完成。&lt;/p>
&lt;p>感兴趣的话可以在 issue 中一起讨论。&lt;/p>
&lt;h3 id="集群的自动发现与收集">集群的自动发现与收集&lt;/h3>
&lt;p>clusterpedia 中用来表示集群的资源叫做 PediaCluster, 而不是简单的 Cluster，最主要的原因便是 clusterpedia 设计初衷便是让 clusterpedia 可以建立在已有的多集群管理平台之上。&lt;/p>
&lt;p>为了遵循初衷，第一个问题便是不能和已有的多集群平台中的资源冲突， Cluster 便是一个最通用的代表集群的资源名称。&lt;/p>
&lt;p>另外为了更好的去接入到已有的多集群平台上，让已经接入的集群可以自动的完成资源收集，我们需要另外的一个集群发现机制。这个发现机制需要解决以下问题：&lt;/p>
&lt;ul>
&lt;li>能够获取到访问集群的认证信息&lt;/li>
&lt;li>可以配置触发 PediaCluster 生命周期的 Condition 条件&lt;/li>
&lt;li>设置默认的资源收集策略，以及名称前缀等&lt;/li>
&lt;/ul>
&lt;p>这个功能会在 Q1 或者 Q2 中开始详细讨论实现。&lt;/p>
&lt;h2 id="当前进展">当前进展&lt;/h2>
&lt;p>clusterpedia 当前处于比较早期的阶段 (v0.0.9-alpha)，核心功能刚刚完成，还有很多可以优化的地方，对于这些优化点也都提了对应的 issues，欢迎大家一起讨论&lt;/p>
&lt;p>这里简单说一些进入 v0.1.0 版本前的优化点:&lt;/p>
&lt;ul>
&lt;li>从具有 Server-Side Apply 特性的集群中收集到的资源会带有很臃肿的 managedFields 字段， clustersynchro manager 模块会增加相应 feature gate，来允许用户在收集时裁减掉这个字段&lt;/li>
&lt;li>同样的臃肿字段 annotations 中的 &lt;a href="http://kubectl.kubernetes.io/last-applied-configuration">http://kubectl.kubernetes.io/last-applied-configuration&lt;/a>，也要允许裁剪这个字段&lt;/li>
&lt;li>在指定集群获取资源时，如果集群处于异常状态时，应该在响应中添加 warning 来提醒用户&lt;/li>
&lt;li>对 PediaCluster 的状态信息有更准确的更新&lt;/li>
&lt;li>弱网环境下，资源收集的优化&lt;/li>
&lt;/ul>
&lt;p>更多的优化项，大家可以在 issue 中提出新的想法。&lt;/p>
&lt;h2 id="roadmap">Roadmap&lt;/h2>
&lt;p>当前只是暂定的 Roadmap，具体的排期还要看社区的需求程度&lt;/p>
&lt;h3 id="2021-q4">2021 Q4&lt;/h3>
&lt;p>在 2021 的 Q4 阶段会完成上述的优化项，并且完成对自定义资源的收集&lt;/p>
&lt;ul>
&lt;li>详细化资源收集状态&lt;/li>
&lt;li>自定义资源的收集&lt;/li>
&lt;/ul>
&lt;h3 id="2022-q1">2022 Q1&lt;/h3>
&lt;ul>
&lt;li>支持插件化存储层&lt;/li>
&lt;li>实现集群的自动发现和收集&lt;/li>
&lt;/ul>
&lt;h3 id="2022-q3">2022 Q3&lt;/h3>
&lt;ul>
&lt;li>支持对集群资源更多的控制，例如 watch/create/update/delete 等操作&lt;/li>
&lt;li>默认存储层支持自定义 Collection Resource&lt;/li>
&lt;li>支持请求附带关系资源&lt;/li>
&lt;/ul>
&lt;h2 id="使用注意">使用注意&lt;/h2>
&lt;h3 id="多集群网络连通">多集群网络连通&lt;/h3>
&lt;p>clusterpedia 实际并不会解决多集群环境下的网络连通问题，用户可以使用tower等工具来连接访问子集群，也可以借助 submariner 或者 skupper 来解决跨集群网络问题。&lt;/p></description></item></channel></rss>